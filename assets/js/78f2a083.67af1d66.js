"use strict";(self.webpackChunkserenity_users_guide=self.webpackChunkserenity_users_guide||[]).push([[8299],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),h=a,m=c["".concat(l,".").concat(h)]||c[h]||u[h]||r;return n?i.createElement(m,s(s({ref:t},d),{},{components:n})):i.createElement(m,s({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7261:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=n(7462),a=(n(7294),n(3905));const r={id:"rest",sidebar_position:3},s="Your First API Test",o={unversionedId:"tutorials/rest",id:"tutorials/rest",isDocsHomePage:!1,title:"Your First API Test",description:"In the previous tutorial we looked at how to write a simple web test with Serenity BDD. But Serenity isn't just for web tests: Serenity BDD also provides tight integration with Rest Assured, a popular open source library for testing REST APIs.",source:"@site/docs/tutorials/rest.md",sourceDirName:"tutorials",slug:"/tutorials/rest",permalink:"/docs/tutorials/rest",editUrl:"https://github.com/serenity-bdd/serenity-bdd.github.io/blob/master/docs/tutorials/rest.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"rest",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Your First Screenplay Scenario",permalink:"/docs/tutorials/screenplay"},next:{title:"Getting Started With Cucumber using Serenity BDD and Screenplay",permalink:"/docs/tutorials/cucumber-screenplay"}},l=[{value:"Pre-requisites",id:"pre-requisites",children:[]},{value:"Creating your project",id:"creating-your-project",children:[]},{value:"Deleting the unnecessary files",id:"deleting-the-unnecessary-files",children:[]},{value:"Adding the Serenity RestAssured Dependency",id:"adding-the-serenity-restassured-dependency",children:[]},{value:"Enabling Detailed HTML reports",id:"enabling-detailed-html-reports",children:[]},{value:"The project directory structure",id:"the-project-directory-structure",children:[]},{value:"Writing an API test",id:"writing-an-api-test",children:[{value:"Basic test structure",id:"basic-test-structure",children:[]},{value:"Creating Action Classes",id:"creating-action-classes",children:[]},{value:"Completing our test case",id:"completing-our-test-case",children:[]}]},{value:"Reporting and Living Documentation",id:"reporting-and-living-documentation",children:[]},{value:"Conclusion",id:"conclusion",children:[]}],p={toc:l};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"your-first-api-test"},"Your First API Test"),(0,a.kt)("p",null,"In the previous tutorial we looked at how to write a simple web test with Serenity BDD. But Serenity isn't just for web tests: Serenity BDD also provides tight integration with ",(0,a.kt)("a",{parentName:"p",href:"https://rest-assured.io/"},"Rest Assured"),", a popular open source library for testing REST APIs."),(0,a.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,a.kt)("p",null,"To run this tutorial, you will need a few things installed on your machine:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Java"),": Serenity BDD is a Java library, so you'll need a recent JDK installed. JDK 1.8 or higher should be fine."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Maven"),": You will need Maven 3 or higher installed in your computer.  This acts as a build tool that also downloads the dependencies while building."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"A Java IDE"),": You'll also need a Java Development Environment such as IntelliJ or Eclipse (and a working knowledge of Java)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Git"),": We'll be using a starter project on Github, and the sample code for this project lives on Github too, so I'll be assuming you have a basic understanding of Git.")),(0,a.kt)("h2",{id:"creating-your-project"},"Creating your project"),(0,a.kt)("p",null,"We will be using the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/serenity-bdd/serenity-junit-starter"},"Serenity BDD Junit Starter"))," template project to get a simple project up and running quickly."),(0,a.kt)("p",null,"This project comes with a sample test based on Junit 5 already implemented for our reference.  For now, we are going to ignore that and start writing a new test from scratch."),(0,a.kt)("p",null,"Go to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/serenity-bdd/serenity-junit-starter"},"project template page on Github")," and click on ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/serenity-bdd/serenity-junit-starter/generate"},"Use This Template"),"."),(0,a.kt)("h2",{id:"deleting-the-unnecessary-files"},"Deleting the unnecessary files"),(0,a.kt)("p",null,"Just to make sure that the starter template's sample files do not interfere with our experience in this tutorial, ",(0,a.kt)("strong",{parentName:"p"},"delete")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"src/test/java/starter/wikipedia")," directory."),(0,a.kt)("h2",{id:"adding-the-serenity-restassured-dependency"},"Adding the Serenity RestAssured Dependency"),(0,a.kt)("p",null,"Open the ",(0,a.kt)("inlineCode",{parentName:"p"},"pom.xml")," file in the root directory and add the following lines in the ",(0,a.kt)("inlineCode",{parentName:"p"},"<dependencies>")," section, similar to the ones already in the file. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"}," <dependency>\n      <groupId>net.serenity-bdd</groupId>\n      <artifactId>serenity-rest-assured</artifactId>\n      <version>${serenity.version}</version>\n      <scope>test</scope>\n  </dependency>\n")),(0,a.kt)("h2",{id:"enabling-detailed-html-reports"},"Enabling Detailed HTML reports"),(0,a.kt)("p",null,"When we use the template's default configuration, we get only a single-page HTML report.  We want to generate a detailed HTML report in this tutorial.  So, let us ",(0,a.kt)("strong",{parentName:"p"},"delete")," the following line from the ",(0,a.kt)("inlineCode",{parentName:"p"},"pom.xml")," file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"  <reports>single-page-html</reports>\n  \x3c!-- DELETE the line above. Yes, delete it! --\x3e\n")),(0,a.kt)("p",null,"You can find this in the configuration section of ",(0,a.kt)("inlineCode",{parentName:"p"},"serenity-maven-plugin")," plugin."),(0,a.kt)("h2",{id:"the-project-directory-structure"},"The project directory structure"),(0,a.kt)("p",null,"We will use some simple conventions to organise our feature files and the supporting Java classes, based on the standard Maven project structure outlined below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500\u2500src\n\u2502   \u251c\u2500\u2500\u2500main\n\u2502   \u2502   \u2514\u2500\u2500\u2500java\n\u2502   \u2502       \u2514\u2500\u2500\u2500starter\n\u2502   \u2514\u2500\u2500\u2500test\n\u2502       \u251c\u2500\u2500\u2500java\n\u2502       \u2502   \u2514\u2500\u2500\u2500starter\n\u2502       \u2502       \u2514\u2500\u2500\u2500petstore\n\u2502       \u2514\u2500\u2500\u2500resources\n")),(0,a.kt)("p",null,"Here are some points to note about the directory structure."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Since we will test the publicly available ",(0,a.kt)("a",{parentName:"li",href:"https://petstore.swagger.io/"},"Pet Store API"),", we will not have any code in the ",(0,a.kt)("inlineCode",{parentName:"li"},"src/main")," directory."),(0,a.kt)("li",{parentName:"ol"},"We will re-use (from the template) the contents that are already there in the ",(0,a.kt)("inlineCode",{parentName:"li"},"src/test/resources/")," directory."),(0,a.kt)("li",{parentName:"ol"},"We will create a new directory ",(0,a.kt)("inlineCode",{parentName:"li"},"petstore")," under ",(0,a.kt)("inlineCode",{parentName:"li"},"src/test/java/starter")," directory to store our test class and its helpers.")),(0,a.kt)("h2",{id:"writing-an-api-test"},"Writing an API test"),(0,a.kt)("p",null,"Let us start with writing our API test.  In this test, we will test the ",(0,a.kt)("a",{parentName:"p",href:"https://petstore.swagger.io/#/pet/getPetById"},(0,a.kt)("inlineCode",{parentName:"a"},"GET /pet/{petId}"))," API.  This API will return a pet when you give its ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," in the URL."),(0,a.kt)("p",null,"However, we cannot call this API directly without any ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),".  Hence, our test needs to first create a Pet and get its ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," before it calling the ",(0,a.kt)("inlineCode",{parentName:"p"},"GET /pet/{petId}")," API end point."),(0,a.kt)("p",null,"In other words, we could write our test in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Given-When-Then")," format as follows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Gherkin"},"Given Kitty is available in the pet store\nWhen I ask for a pet using Kitty's ID\nThen I get Kitty as result\n")),(0,a.kt)("h3",{id:"basic-test-structure"},"Basic test structure"),(0,a.kt)("p",null,"Now we create a new test class (let's call it ",(0,a.kt)("inlineCode",{parentName:"p"},"WhenFetchingAlreadyAvailablePet"),"), and an empty test case (we can call it ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchAlreadyAvailablePet"),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package starter.petstore;\n\nimport net.serenitybdd.junit5.SerenityJUnit5Extension;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\n\n\n@ExtendWith(SerenityJUnit5Extension.class)\npublic class WhenFetchingAlreadyAvailablePet {\n\n  @Test\n  public void fetchAlreadyAvailablePet() {\n    \n  }\n}\n")),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"There are a few things to note here:"),(0,a.kt)("ul",{parentName:"div"},(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"@ExtendWith")," annotation tells JUnit that this test uses Serenity - don't forget this annotation or your test won't be recognised as a Serenity test"),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"@Test")," annotation uses the ",(0,a.kt)("inlineCode",{parentName:"li"},"org.junit.jupiter.api.Test")," class, from JUnit 5. Be careful not to get this mixed up with the JUnit 4 annotation of the same name (",(0,a.kt)("inlineCode",{parentName:"li"},"org.junit.Test"),"), otherwise your test won't run."),(0,a.kt)("li",{parentName:"ul"},"Note that the name of the test class starts with ",(0,a.kt)("inlineCode",{parentName:"li"},"When"),".  This is one of the ways to make sure it is recognized as a test to be run in the Maven build process.  See the ",(0,a.kt)("inlineCode",{parentName:"li"},"pom.xml")," file's ",(0,a.kt)("inlineCode",{parentName:"li"},"configuration")," section for ",(0,a.kt)("inlineCode",{parentName:"li"},"maven-failsafe-plugin")," for more details on this.")))),(0,a.kt)("h3",{id:"creating-action-classes"},"Creating Action Classes"),(0,a.kt)("p",null,"We could simply start writing the entire test's code inside our ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchAlreadyAvailablePet()")," method. That would work fine. But keeping your test code well organised and well-structured is essential to keeping maintenance costs down. And Serenity BDD gives us a number of ways to do this."),(0,a.kt)("p",null,"One of the simplest ways to do this is called ",(0,a.kt)("em",{parentName:"p"},"Action Classes"),". Action Classes are small, reusable classes with methods that encapsulate key user actions.  We will use these classes to call the HTTP APIs."),(0,a.kt)("p",null,"For example, we could break our ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchAlreadyAvailablePet()")," test down into three steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Arrange (Given):")," Set the stage to call the GET api by pre-loading the pet named 'Kitty' using a HTTP POST call documented ",(0,a.kt)("a",{parentName:"li",href:"https://petstore.swagger.io/#/pet/addPet"},"here"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Act (When):")," Call the API under test using the ID of 'Kitty'"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Assert (Then):")," Check that the API returns a pet with name 'Kitty'")),(0,a.kt)("p",null,"Let us create an action class named ",(0,a.kt)("inlineCode",{parentName:"p"},"PetApiActions")," with the following skeleton code, in the same ",(0,a.kt)("inlineCode",{parentName:"p"},"petstore")," package where the test lives."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package starter.petstore;\n\nimport io.cucumber.java.en.Given;\nimport io.cucumber.java.en.Then;\nimport io.cucumber.java.en.When;\nimport net.serenitybdd.core.steps.UIInteractions;\n\n\npublic class PetApiActions extends UIInteractions {\n\n    @Given("Kitty is available in the pet store")\n    public Long givenKittyIsAvailableInPetStore() {\n              \n    }\n\n    @When("I ask for a pet using Kitty\'s ID: {0}")\n    public void whenIAskForAPetWithId(Long id) {\n        \n    }\n\n    @Then("I get Kitty as result")\n    public void thenISeeKittyAsResult() {\n       \n    }\n}\n\n')),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},(0,a.kt)("strong",{parentName:"p"},"Points to note")),(0,a.kt)("ol",{parentName:"div"},(0,a.kt)("li",{parentName:"ol"},"Since we want to use the ID generated by the API in our upcoming step, we return the ID as a Long return value."),(0,a.kt)("li",{parentName:"ol"},"We extend the ",(0,a.kt)("inlineCode",{parentName:"li"},"UIInteractions")," class that comes with the Serenity BDD to help us interact with APIs.")))),(0,a.kt)("p",null,"Let's start with implementing the first action: Setting the stage by pre-creating a pet with name ",(0,a.kt)("inlineCode",{parentName:"p"},'"Kitty"')," by calling the POST API."),(0,a.kt)("p",null,"Since we need to create a Java object to hold the ",(0,a.kt)("inlineCode",{parentName:"p"},"Pet"),", we can create a class ",(0,a.kt)("inlineCode",{parentName:"p"},"Pet.java")," under ",(0,a.kt)("inlineCode",{parentName:"p"},"starter.petstore")," package with the following code."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package starter.petstore;\n\npublic class Pet {\n    private String name;\n    private String status;\n    private Long id;\n\n    public Pet(String name, String status, Long id) {\n        this.name = name;\n        this.status = status;\n        this.id = id;\n    }\n\n    public Pet(String name, String status) {\n        this.name = name;\n        this.status = status;\n    }\n\n    public String getName() {\n        return this.name;\n    }\n\n    public String getStatus() {\n        return this.status;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void setStatus(String status) {\n        this.status = status;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n}\n")),(0,a.kt)("p",null,"Now that we have a way to represent a Pet in our code, let us write our first action in function ",(0,a.kt)("inlineCode",{parentName:"p"},"givenKittyIsAvailableInPetStore()"),"  of the class ",(0,a.kt)("inlineCode",{parentName:"p"},"PetApiActions"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package starter.petstore;\n\nimport io.cucumber.java.en.Given;\nimport io.cucumber.java.en.Then;\nimport io.cucumber.java.en.When;\nimport io.restassured.http.ContentType;\nimport io.restassured.mapper.ObjectMapperType;\nimport static net.serenitybdd.rest.SerenityRest.given;\nimport net.serenitybdd.core.steps.UIInteractions;\n\n\nimport static net.serenitybdd.rest.SerenityRest.*;\n\npublic class PetApiActions extends UIInteractions {\n\n    @Given("Kitty is available in the pet store")\n    public Long givenKittyIsAvailableInPetStore() {\n\n        Pet pet = new Pet("Kitty", "available");\n\n        Long newId = given()\n                .baseUri("https://petstore.swagger.io")\n                .basePath("/v2/pet")\n                .body(pet, ObjectMapperType.GSON)\n                .accept(ContentType.JSON)\n                .contentType(ContentType.JSON).post().getBody().as(Pet.class, ObjectMapperType.GSON).getId();\n        return newId;\n    }\n\n    @When("I ask for a pet using Kitty\'s ID: {0}")\n    public void whenIAskForAPetWithId(Long id) {\n\n    }\n\n    @Then("I get Kitty as result")\n    public void thenISeeKittyAsResult() {\n\n    }\n}\n\n')),(0,a.kt)("p",null,"Next, let us write the implementation for the ",(0,a.kt)("inlineCode",{parentName:"p"},"whenIAskForAPetWithId")," function.  This will include just calling the GET API that needs to be tested."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'    @When("I ask for a pet using Kitty\'s ID: {0}")\n    public void whenIAskForAPetWithId(Long id) {\n        when().get("/" + id);\n    }\n')),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},(0,a.kt)("strong",{parentName:"p"},"Points to note")),(0,a.kt)("ol",{parentName:"div"},(0,a.kt)("li",{parentName:"ol"},"In the ",(0,a.kt)("inlineCode",{parentName:"li"},"get")," method call above, the ",(0,a.kt)("inlineCode",{parentName:"li"},"baseUri")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"basePath")," from the ",(0,a.kt)("inlineCode",{parentName:"li"},"given()")," section is reused.  This is why you did not have to repeat those details in this method."),(0,a.kt)("li",{parentName:"ol"},"Since we are using the ",(0,a.kt)("inlineCode",{parentName:"li"},"id")," as an input parameter, we are using ",(0,a.kt)("inlineCode",{parentName:"li"},"{0}")," in the description so that it can appear in our reports.   ")))),(0,a.kt)("p",null,"Next, let us write the implementation for the ",(0,a.kt)("inlineCode",{parentName:"p"},"thenISeeKittyAsResult")," method as follows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'    @Then("I get Kitty as result")\n    public void thenISeeKittyAsResult() {\n        then().body("name", Matchers.equalTo("Kitty"));\n    }\n\n')),(0,a.kt)("p",null,"Putting everything together, the ",(0,a.kt)("inlineCode",{parentName:"p"},"PetApiActions.java")," file looks as follows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package starter.petstore;\n\nimport io.cucumber.java.en.Given;\nimport io.cucumber.java.en.Then;\nimport io.cucumber.java.en.When;\nimport io.restassured.http.ContentType;\nimport io.restassured.mapper.ObjectMapperType;\nimport static net.serenitybdd.rest.SerenityRest.then;\nimport static net.serenitybdd.rest.SerenityRest.when;\nimport static net.serenitybdd.rest.SerenityRest.given;\nimport net.serenitybdd.core.steps.UIInteractions;\nimport org.hamcrest.Matchers;\n\nimport static net.serenitybdd.rest.SerenityRest.*;\n\npublic class PetApiActions extends UIInteractions {\n\n    @Given("Kitty is available in the pet store")\n    public Long givenKittyIsAvailableInPetStore() {\n\n        Pet pet = new Pet("Kitty", "available");\n\n        Long newId = given()\n                .baseUri("https://petstore.swagger.io")\n                .basePath("/v2/pet")\n                .body(pet, ObjectMapperType.GSON)\n                .accept(ContentType.JSON)\n                .contentType(ContentType.JSON).post().getBody().as(Pet.class, ObjectMapperType.GSON).getId();\n        return newId;\n    }\n\n    @When("I ask for a pet using Kitty\'s ID: {0}")\n    public void whenIAskForAPetWithId(Long id) {\n        when().get("/" + id);\n    }\n\n    @Then("I get Kitty as result")\n    public void thenISeeKittyAsResult() {\n        then().body("name", Matchers.equalTo("Kitty"));\n    }\n\n}\n\n\n')),(0,a.kt)("h3",{id:"completing-our-test-case"},"Completing our test case"),(0,a.kt)("p",null,"Now that we have our Actions class ready, let us finish writing our test case in the ",(0,a.kt)("inlineCode",{parentName:"p"},"WhenFetchingAlreadyAvailablePet")," class."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package starter.petstore;\n\nimport net.serenitybdd.junit5.SerenityJUnit5Extension;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\n\n@ExtendWith(SerenityJUnit5Extension.class)\npublic class WhenFetchingAlreadyAvailablePet {\n\n    Long newPetId = null;\n    PetApiActions petApi;\n\n    @Test\n    public void fetchAlreadyAvailablePet() {\n        newPetId = petApi.givenKittyIsAvailableInPetStore();\n        petApi.whenIAskForAPetWithId(newPetId);\n        petApi.thenISeeKittyAsResult();\n    }\n}\n")),(0,a.kt)("p",null,"Let us try running the Maven build to see the result.  If the API works as expected, we expect the test to pass and a detailed HTML report to be generated."),(0,a.kt)("p",null,"Run the following command in a terminal or command prompt."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mvn clean verify\n")),(0,a.kt)("p",null,"Once the command completes, you can see output similar to the following."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.009 s - in starter.petstore.WhenFetchingAlreadyAvailablePet\n[INFO] \n[INFO] Results:\n[INFO]\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n\n...\n...\n...\n\n[INFO] -----------------------------------------\n[INFO]  SERENITY TESTS: SUCCESS\n[INFO] -----------------------------------------\n[INFO] | Test cases executed    | 1\n[INFO] | Tests executed         | 1\n[INFO] | Tests passed           | 1\n[INFO] | Tests failed           | 0\n[INFO] | Tests with errors      | 0\n[INFO] | Tests compromised      | 0\n[INFO] | Tests aborted          | 0\n[INFO] | Tests pending          | 0\n[INFO] | Tests ignored/skipped  | 0\n[INFO] ------------------------ | --------------\n[INFO] | Total Duration         | 9s 212ms\n[INFO] | Fastest test took      | 9s 212ms\n[INFO] | Slowest test took      | 9s 212ms\n[INFO] -----------------------------------------\n[INFO]\n[INFO] SERENITY REPORTS\n[INFO]   - Full Report: file:///C:/Users/calib/source-codes/temp/serenity-junit-starter/target/site/serenity/index.html\n[INFO]\n[INFO] --- maven-failsafe-plugin:3.0.0-M5:verify (default) @ serenity-junit-starter ---\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  39.104 s\n[INFO] Finished at: 2022-09-02T17:33:14+05:30\n[INFO] ------------------------------------------------------------------------\n\n")),(0,a.kt)("p",null,"Yes, the test passed and the build is successful now.  We have managed to test our API successfully \ud83c\udf89"),(0,a.kt)("h2",{id:"reporting-and-living-documentation"},"Reporting and Living Documentation"),(0,a.kt)("p",null,"If you notice carefully, the output of the ",(0,a.kt)("inlineCode",{parentName:"p"},"mvn clean verify")," command informed us that a report is created in ",(0,a.kt)("inlineCode",{parentName:"p"},"target/site/serenity/index.html")),(0,a.kt)("p",null,"When you open this file in a web browser, you see a beautiful report like this."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Report Home Page",src:n(6820).Z})),(0,a.kt)("p",null,"You can also find the test-wise results detailing the steps in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Stories")," tab, detailing the REST API calls."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Report",src:n(2679).Z})),(0,a.kt)("p",null,"If you want to look at the exact details used in the HTTP requests, you can click on the link circled in the above screenshot.  This will show you the details as shown below."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Report with HTTP requests",src:n(5667).Z})),(0,a.kt)("p",null,"Feel free to navigate the links in this report and look around."),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"In this tutorial, you created your own API test cases and ran them using Serenity BDD to generate a beautiful report."))}d.isMDXComponent=!0},6820:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/rest-report-home-a2aa1a51d9d3c6af7f8263bf8021803a.png"},5667:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/rest-report-http-requests-69463f8dc1251640a8c70994e2500b81.png"},2679:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/rest-report-stories-67c1feb64856b4eb56f3490782e91a7e.jpg"}}]);